{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\genAi\\\\healthcare-translation\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport LANG_OPTIONS from \"./langOptions\"; // Assuming LANG_OPTIONS is imported from another file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [srcLang, setSrcLang] = useState(\"en\");\n  const [tgtLang, setTgtLang] = useState(\"es\");\n  const [original, setOriginal] = useState(\"\");\n  const [translated, setTranslated] = useState(\"\");\n  const [recording, setRecording] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const availableTargets = LANG_OPTIONS.map(option => option.code).filter(code => code !== srcLang);\n  const getSrcLangInfo = () => LANG_OPTIONS.find(lang => lang.code === srcLang) || {};\n  const getTgtLangInfo = () => LANG_OPTIONS.find(lang => lang.code === tgtLang) || {};\n  const toggleRecording = () => {\n    setRecording(!recording);\n  };\n  const handleTranslate = async () => {\n    setLoading(true);\n    // Simulate translation logic\n    const translationResult = await translateText(original, srcLang, tgtLang);\n    setTranslated(translationResult);\n    setLoading(false);\n  };\n  const speakText = (text, languageCode) => {\n    // Simulate text-to-speech logic\n    console.log(`Speaking text in ${languageCode}:`, text);\n  };\n  const translateText = (text, srcLang, tgtLang) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(\"Translated text\"); // Placeholder for actual translation logic\n      }, 2000);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"MedTranslate AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"app-subtitle\",\n        children: \"Ultra-Premium Medical Translation Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"translation-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"language-label\",\n            children: \"Source Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"language-select\",\n            value: srcLang,\n            onChange: e => setSrcLang(e.target.value),\n            children: LANG_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: o.code,\n              children: [o.flag, \" \", o.label]\n            }, o.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"language-label\",\n            children: \"Target Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"language-select\",\n            value: tgtLang,\n            onChange: e => setTgtLang(e.target.value),\n            children: availableTargets.map(code => {\n              const lang = LANG_OPTIONS.find(l => l.code === code);\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: code,\n                children: [lang === null || lang === void 0 ? void 0 : lang.flag, \" \", (lang === null || lang === void 0 ? void 0 : lang.label) || code]\n              }, code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"translation-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"panel-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"language-flag\",\n                children: getSrcLangInfo().flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), \"Original Text\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea\",\n            value: original,\n            onChange: e => setOriginal(e.target.value),\n            placeholder: \"Enter your medical text here or use voice recording for hands-free input...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-record ${recording ? \"recording\" : \"\"}`,\n              onClick: toggleRecording,\n              children: recording ? \"Stop Recording\" : \"Voice Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleTranslate,\n              disabled: loading || !tgtLang || !original.trim(),\n              children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), \"Processing...\"]\n              }, void 0, true) : \"Translate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"panel-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"language-flag\",\n                children: getTgtLangInfo().flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), \"Professional Translation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea\",\n            value: translated,\n            readOnly: true,\n            placeholder: \"Your professional medical translation will appear here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => speakText(translated, tgtLang),\n              disabled: !translated,\n              children: \"Audio Playback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tI+6i3VIio9hrf2NIZfXsRG6/XU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","LANG_OPTIONS","jsxDEV","_jsxDEV","Fragment","_Fragment","App","srcLang","setSrcLang","tgtLang","setTgtLang","original","setOriginal","translated","setTranslated","recording","setRecording","loading","setLoading","availableTargets","map","option","code","filter","getSrcLangInfo","find","lang","getTgtLangInfo","toggleRecording","handleTranslate","translationResult","translateText","speakText","text","languageCode","console","log","Promise","resolve","setTimeout","className","children","fileName","lineNumber","columnNumber","value","onChange","e","target","o","flag","label","l","placeholder","onClick","disabled","trim","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/genAi/healthcare-translation/frontend/src/App.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport LANG_OPTIONS from \"./langOptions\" // Assuming LANG_OPTIONS is imported from another file\r\n\r\nexport default function App() {\r\n  const [srcLang, setSrcLang] = useState(\"en\")\r\n  const [tgtLang, setTgtLang] = useState(\"es\")\r\n  const [original, setOriginal] = useState(\"\")\r\n  const [translated, setTranslated] = useState(\"\")\r\n  const [recording, setRecording] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const availableTargets = LANG_OPTIONS.map((option) => option.code).filter((code) => code !== srcLang)\r\n\r\n  const getSrcLangInfo = () => LANG_OPTIONS.find((lang) => lang.code === srcLang) || {}\r\n  const getTgtLangInfo = () => LANG_OPTIONS.find((lang) => lang.code === tgtLang) || {}\r\n\r\n  const toggleRecording = () => {\r\n    setRecording(!recording)\r\n  }\r\n\r\n  const handleTranslate = async () => {\r\n    setLoading(true)\r\n    // Simulate translation logic\r\n    const translationResult = await translateText(original, srcLang, tgtLang)\r\n    setTranslated(translationResult)\r\n    setLoading(false)\r\n  }\r\n\r\n  const speakText = (text, languageCode) => {\r\n    // Simulate text-to-speech logic\r\n    console.log(`Speaking text in ${languageCode}:`, text)\r\n  }\r\n\r\n  const translateText = (text, srcLang, tgtLang) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(\"Translated text\") // Placeholder for actual translation logic\r\n      }, 2000)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-header\">\r\n        <h1 className=\"app-title\">MedTranslate AI</h1>\r\n        <p className=\"app-subtitle\">Ultra-Premium Medical Translation Platform</p>\r\n      </div>\r\n\r\n      <div className=\"translation-card\">\r\n        {/* Language Selector */}\r\n        <div className=\"language-selector\">\r\n          <div className=\"language-group\">\r\n            <label className=\"language-label\">Source Language</label>\r\n            <select className=\"language-select\" value={srcLang} onChange={(e) => setSrcLang(e.target.value)}>\r\n              {LANG_OPTIONS.map((o) => (\r\n                <option key={o.code} value={o.code}>\r\n                  {o.flag} {o.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"language-group\">\r\n            <label className=\"language-label\">Target Language</label>\r\n            <select className=\"language-select\" value={tgtLang} onChange={(e) => setTgtLang(e.target.value)}>\r\n              {availableTargets.map((code) => {\r\n                const lang = LANG_OPTIONS.find((l) => l.code === code)\r\n                return (\r\n                  <option key={code} value={code}>\r\n                    {lang?.flag} {lang?.label || code}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Translation Areas */}\r\n        <div className=\"translation-grid\">\r\n          <div className=\"text-panel\">\r\n            <div className=\"panel-header\">\r\n              <h3 className=\"panel-title\">\r\n                <span className=\"language-flag\">{getSrcLangInfo().flag}</span>\r\n                Original Text\r\n              </h3>\r\n            </div>\r\n            <textarea\r\n              className=\"textarea\"\r\n              value={original}\r\n              onChange={(e) => setOriginal(e.target.value)}\r\n              placeholder=\"Enter your medical text here or use voice recording for hands-free input...\"\r\n            />\r\n            <div className=\"input-controls\">\r\n              <button className={`btn btn-record ${recording ? \"recording\" : \"\"}`} onClick={toggleRecording}>\r\n                {recording ? \"Stop Recording\" : \"Voice Input\"}\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleTranslate}\r\n                disabled={loading || !tgtLang || !original.trim()}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <div className=\"loading-spinner\"></div>\r\n                    Processing...\r\n                  </>\r\n                ) : (\r\n                  \"Translate\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-panel\">\r\n            <div className=\"panel-header\">\r\n              <h3 className=\"panel-title\">\r\n                <span className=\"language-flag\">{getTgtLangInfo().flag}</span>\r\n                Professional Translation\r\n              </h3>\r\n            </div>\r\n            <textarea\r\n              className=\"textarea\"\r\n              value={translated}\r\n              readOnly\r\n              placeholder=\"Your professional medical translation will appear here...\"\r\n            />\r\n            <div className=\"input-controls\">\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => speakText(translated, tgtLang)}\r\n                disabled={!translated}\r\n              >\r\n                Audio Playback\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}