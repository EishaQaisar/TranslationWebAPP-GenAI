{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\healthcare-translation\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:8000\"; // local backend\n\nconst LANG_OPTIONS = [{\n  code: \"en\",\n  label: \"English\"\n}, {\n  code: \"fr\",\n  label: \"French\"\n}, {\n  code: \"es\",\n  label: \"Spanish\"\n}, {\n  code: \"de\",\n  label: \"German\"\n}, {\n  code: \"ja\",\n  label: \"Japanese\"\n}, {\n  code: \"zh\",\n  label: \"Chinese\"\n}, {\n  code: \"pt\",\n  label: \"Portuguese\"\n}];\nexport default function App() {\n  _s();\n  const [original, setOriginal] = useState(\"\");\n  const [translated, setTranslated] = useState(\"\");\n  const [srcLang, setSrcLang] = useState(\"en\");\n  const [tgtLang, setTgtLang] = useState(\"fr\");\n  const [loading, setLoading] = useState(false);\n  const handleTranslate = async () => {\n    if (!original.trim()) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`${BACKEND_URL}/translate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: original,\n          src_lang: srcLang,\n          tgt_lang: tgtLang\n        })\n      });\n      const data = await res.json();\n      setTranslated(data.translated_text || \"\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Translate request failed. Check backend.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"20px auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simple Translation App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"From: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: srcLang,\n        onChange: e => setSrcLang(e.target.value),\n        children: LANG_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.code,\n          children: o.label\n        }, o.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" To: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: tgtLang,\n        onChange: e => setTgtLang(e.target.value),\n        children: LANG_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.code,\n          children: o.label\n        }, o.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: original,\n      onChange: e => setOriginal(e.target.value),\n      rows: 6,\n      style: {\n        width: \"100%\",\n        marginTop: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranslate,\n      disabled: loading,\n      style: {\n        marginTop: 10\n      },\n      children: loading ? \"Translating...\" : \"Translate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Translated Text:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: translated,\n      readOnly: true,\n      rows: 6,\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CfGySVwAVJKuf71TZn+zpRCMEAo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BACKEND_URL","LANG_OPTIONS","code","label","App","_s","original","setOriginal","translated","setTranslated","srcLang","setSrcLang","tgtLang","setTgtLang","loading","setLoading","handleTranslate","trim","res","fetch","method","headers","body","JSON","stringify","text","src_lang","tgt_lang","data","json","translated_text","err","console","error","alert","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","o","rows","width","marginTop","onClick","disabled","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/healthcare-translation/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst BACKEND_URL = \"http://localhost:8000\"; // local backend\r\n\r\nconst LANG_OPTIONS = [\r\n  { code: \"en\", label: \"English\" },\r\n  { code: \"fr\", label: \"French\" },\r\n  { code: \"es\", label: \"Spanish\" },\r\n  { code: \"de\", label: \"German\" },\r\n  { code: \"ja\", label: \"Japanese\" },\r\n  { code: \"zh\", label: \"Chinese\" },\r\n  { code: \"pt\", label: \"Portuguese\" }\r\n];\r\n\r\nexport default function App() {\r\n  const [original, setOriginal] = useState(\"\");\r\n  const [translated, setTranslated] = useState(\"\");\r\n  const [srcLang, setSrcLang] = useState(\"en\");\r\n  const [tgtLang, setTgtLang] = useState(\"fr\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleTranslate = async () => {\r\n    if (!original.trim()) return;\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(`${BACKEND_URL}/translate`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: original, src_lang: srcLang, tgt_lang: tgtLang }),\r\n      });\r\n      const data = await res.json();\r\n      setTranslated(data.translated_text || \"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Translate request failed. Check backend.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: \"20px auto\", fontFamily: \"Arial, sans-serif\" }}>\r\n      <h2>Simple Translation App</h2>\r\n\r\n      <div>\r\n        <label>From: </label>\r\n        <select value={srcLang} onChange={(e) => setSrcLang(e.target.value)}>\r\n          {LANG_OPTIONS.map(o => <option key={o.code} value={o.code}>{o.label}</option>)}\r\n        </select>\r\n        <label> To: </label>\r\n        <select value={tgtLang} onChange={(e) => setTgtLang(e.target.value)}>\r\n          {LANG_OPTIONS.map(o => <option key={o.code} value={o.code}>{o.label}</option>)}\r\n        </select>\r\n      </div>\r\n\r\n      <textarea\r\n        value={original}\r\n        onChange={(e) => setOriginal(e.target.value)}\r\n        rows={6}\r\n        style={{ width: \"100%\", marginTop: 10 }}\r\n      />\r\n      <button onClick={handleTranslate} disabled={loading} style={{ marginTop: 10 }}>\r\n        {loading ? \"Translating...\" : \"Translate\"}\r\n      </button>\r\n\r\n      <h3>Translated Text:</h3>\r\n      <textarea value={translated} readOnly rows={6} style={{ width: \"100%\" }} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAG,uBAAuB,CAAC,CAAC;;AAE7C,MAAMC,YAAY,GAAG,CACnB;EAAEC,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAU,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAS,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAU,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAS,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAW,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAU,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAa,CAAC,CACpC;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMmB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,CAAC,EAAE;IACtBF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGnB,WAAW,YAAY,EAAE;QAClDoB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEnB,QAAQ;UAAEoB,QAAQ,EAAEhB,OAAO;UAAEiB,QAAQ,EAAEf;QAAQ,CAAC;MAC/E,CAAC,CAAC;MACF,MAAMgB,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;MAC7BpB,aAAa,CAACmB,IAAI,CAACE,eAAe,IAAI,EAAE,CAAC;IAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,0CAA0C,CAAC;IACnD,CAAC,SAAS;MACRnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKoC,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,WAAW;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAClFxC,OAAA;MAAAwC,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/B5C,OAAA;MAAAwC,QAAA,gBACExC,OAAA;QAAAwC,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB5C,OAAA;QAAQ6C,KAAK,EAAElC,OAAQ;QAACmC,QAAQ,EAAGC,CAAC,IAAKnC,UAAU,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,EACjEtC,YAAY,CAAC+C,GAAG,CAACC,CAAC,iBAAIlD,OAAA;UAAqB6C,KAAK,EAAEK,CAAC,CAAC/C,IAAK;UAAAqC,QAAA,EAAEU,CAAC,CAAC9C;QAAK,GAA/B8C,CAAC,CAAC/C,IAAI;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACT5C,OAAA;QAAAwC,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB5C,OAAA;QAAQ6C,KAAK,EAAEhC,OAAQ;QAACiC,QAAQ,EAAGC,CAAC,IAAKjC,UAAU,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,EACjEtC,YAAY,CAAC+C,GAAG,CAACC,CAAC,iBAAIlD,OAAA;UAAqB6C,KAAK,EAAEK,CAAC,CAAC/C,IAAK;UAAAqC,QAAA,EAAEU,CAAC,CAAC9C;QAAK,GAA/B8C,CAAC,CAAC/C,IAAI;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN5C,OAAA;MACE6C,KAAK,EAAEtC,QAAS;MAChBuC,QAAQ,EAAGC,CAAC,IAAKvC,WAAW,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CM,IAAI,EAAE,CAAE;MACRf,KAAK,EAAE;QAAEgB,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAG;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACF5C,OAAA;MAAQsD,OAAO,EAAErC,eAAgB;MAACsC,QAAQ,EAAExC,OAAQ;MAACqB,KAAK,EAAE;QAAEiB,SAAS,EAAE;MAAG,CAAE;MAAAb,QAAA,EAC3EzB,OAAO,GAAG,gBAAgB,GAAG;IAAW;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAET5C,OAAA;MAAAwC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB5C,OAAA;MAAU6C,KAAK,EAAEpC,UAAW;MAAC+C,QAAQ;MAACL,IAAI,EAAE,CAAE;MAACf,KAAK,EAAE;QAAEgB,KAAK,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV;AAACtC,EAAA,CAvDuBD,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}