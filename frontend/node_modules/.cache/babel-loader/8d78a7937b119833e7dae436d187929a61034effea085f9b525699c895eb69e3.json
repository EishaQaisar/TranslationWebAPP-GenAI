{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\healthcare-translation\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\n\n// Full language list\nconst LANG_OPTIONS = [{\n  code: \"en\",\n  label: \"English\"\n}, {\n  code: \"es\",\n  label: \"Spanish\"\n}, {\n  code: \"ru\",\n  label: \"Russian\"\n}, {\n  code: \"zh\",\n  label: \"Chinese\"\n}, {\n  code: \"fr\",\n  label: \"French\"\n}, {\n  code: \"de\",\n  label: \"German\"\n}, {\n  code: \"ar\",\n  label: \"Arabic\"\n}, {\n  code: \"hi\",\n  label: \"Hindi\"\n}, {\n  code: \"ja\",\n  label: \"Japanese\"\n}];\n\n// Map of valid translations\nconst VALID_TARGETS = {\n  en: [\"es\", \"ru\", \"zh\", \"hi\", \"ar\", \"fr\", \"de\", \"ja\"],\n  es: [\"en\"],\n  ru: [\"en\", \"zh\", \"hi\"],\n  zh: [\"en\", \"ru\", \"es\", \"fr\", \"hi\", \"ar\", \"ja\"],\n  fr: [\"en\", \"zh\", \"hi\"],\n  de: [\"en\", \"ru\", \"hi\"],\n  ar: [\"en\", \"zh\", \"hi\"],\n  hi: [\"en\"],\n  ja: [\"en\", \"es\", \"zh\", \"hi\"]\n};\nexport default function App() {\n  _s();\n  const [original, setOriginal] = useState(\"\");\n  const [translated, setTranslated] = useState(\"\");\n  const [srcLang, setSrcLang] = useState(\"en\");\n  const [tgtLang, setTgtLang] = useState(\"es\");\n  const [loading, setLoading] = useState(false);\n\n  // Compute available target languages dynamically\n  const availableTargets = VALID_TARGETS[srcLang] || [];\n\n  // Ensure current target language is valid\n  if (!availableTargets.includes(tgtLang)) setTgtLang(availableTargets[0] || \"\");\n  const handleTranslate = async () => {\n    if (!original.trim() || !tgtLang) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`${BACKEND_URL}/translate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: original,\n          src_lang: srcLang,\n          tgt_lang: tgtLang\n        })\n      });\n      const data = await res.json();\n      if (data.translated_text) {\n        setTranslated(data.translated_text);\n      } else if (data.error) {\n        alert(\"Translate error: \" + data.error);\n      }\n    } catch (err) {\n      console.error(\"Translate request failed:\", err);\n      alert(\"Translate request failed. Check backend.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const speakText = (text, lang) => {\n    if (!(\"speechSynthesis\" in window)) return;\n    const u = new SpeechSynthesisUtterance(text);\n    const langMap = {\n      ur: \"ur-PK\",\n      es: \"es-ES\",\n      fr: \"fr-FR\",\n      de: \"de-DE\",\n      it: \"it-IT\",\n      ar: \"ar-SA\",\n      hi: \"hi-IN\",\n      ja: \"ja-JP\",\n      ko: \"ko-KR\",\n      zh: \"zh-CN\",\n      ru: \"ru-RU\",\n      en: \"en-US\"\n    };\n    u.lang = langMap[lang] || \"en-US\";\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(u);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 720,\n      margin: \"24px auto\",\n      padding: 16,\n      fontFamily: \"Inter, Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Healthcare Translation AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 8,\n        marginBottom: 12,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontSize: 12\n          },\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: srcLang,\n          onChange: e => setSrcLang(e.target.value),\n          children: LANG_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: o.code,\n            children: o.label\n          }, o.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            fontSize: 12\n          },\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tgtLang,\n          onChange: e => setTgtLang(e.target.value),\n          children: availableTargets.map(code => {\n            const lang = LANG_OPTIONS.find(l => l.code === code);\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: code,\n              children: (lang === null || lang === void 0 ? void 0 : lang.label) || code\n            }, code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gap: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#fff\",\n          padding: 12,\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Original (\", srcLang, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: original,\n          onChange: e => setOriginal(e.target.value),\n          style: {\n            width: \"100%\",\n            minHeight: 160\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTranslate,\n          disabled: loading || !tgtLang,\n          style: {\n            marginTop: 8,\n            padding: \"8px 12px\"\n          },\n          children: loading ? \"Translating...\" : \"Translate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#fff\",\n          padding: 12,\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Translated (\", tgtLang, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: translated,\n          readOnly: true,\n          style: {\n            width: \"100%\",\n            minHeight: 160\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => speakText(translated, tgtLang),\n          disabled: !translated,\n          style: {\n            marginTop: 8,\n            padding: \"8px 12px\"\n          },\n          children: \"\\uD83D\\uDD0A Speak Translation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 12,\n        color: \"#666\",\n        fontSize: 13\n      },\n      children: \"Only supported translations are shown in the \\\"To\\\" dropdown based on the selected source language.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GviLrE47Yy+PeOb4wFYkK0i1d2U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","LANG_OPTIONS","code","label","VALID_TARGETS","en","es","ru","zh","fr","de","ar","hi","ja","App","_s","original","setOriginal","translated","setTranslated","srcLang","setSrcLang","tgtLang","setTgtLang","loading","setLoading","availableTargets","includes","handleTranslate","trim","res","fetch","method","headers","body","JSON","stringify","text","src_lang","tgt_lang","data","json","translated_text","error","alert","err","console","speakText","lang","window","u","SpeechSynthesisUtterance","langMap","ur","it","ko","speechSynthesis","cancel","speak","style","maxWidth","margin","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginBottom","flexWrap","fontSize","value","onChange","e","target","map","o","find","l","gridTemplateColumns","background","borderRadius","width","minHeight","onClick","disabled","marginTop","readOnly","color","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/healthcare-translation/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\r\n\r\n// Full language list\r\nconst LANG_OPTIONS = [\r\n  { code: \"en\", label: \"English\" },\r\n  { code: \"es\", label: \"Spanish\" },\r\n  { code: \"ru\", label: \"Russian\" },\r\n  { code: \"zh\", label: \"Chinese\" },\r\n  { code: \"fr\", label: \"French\" },\r\n  { code: \"de\", label: \"German\" },\r\n  { code: \"ar\", label: \"Arabic\" },\r\n  { code: \"hi\", label: \"Hindi\" },\r\n  { code: \"ja\", label: \"Japanese\" },\r\n];\r\n\r\n// Map of valid translations\r\nconst VALID_TARGETS = {\r\n  en: [\"es\", \"ru\", \"zh\", \"hi\", \"ar\", \"fr\", \"de\", \"ja\"],\r\n  es: [\"en\"],\r\n  ru: [\"en\", \"zh\", \"hi\"],\r\n  zh: [\"en\", \"ru\", \"es\", \"fr\", \"hi\", \"ar\", \"ja\"],\r\n  fr: [\"en\", \"zh\", \"hi\"],\r\n  de: [\"en\", \"ru\", \"hi\"],\r\n  ar: [\"en\", \"zh\", \"hi\"],\r\n  hi: [\"en\"],\r\n  ja: [\"en\", \"es\", \"zh\", \"hi\"],\r\n};\r\n\r\nexport default function App() {\r\n  const [original, setOriginal] = useState(\"\");\r\n  const [translated, setTranslated] = useState(\"\");\r\n  const [srcLang, setSrcLang] = useState(\"en\");\r\n  const [tgtLang, setTgtLang] = useState(\"es\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Compute available target languages dynamically\r\n  const availableTargets = VALID_TARGETS[srcLang] || [];\r\n\r\n  // Ensure current target language is valid\r\n  if (!availableTargets.includes(tgtLang)) setTgtLang(availableTargets[0] || \"\");\r\n\r\n  const handleTranslate = async () => {\r\n    if (!original.trim() || !tgtLang) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(`${BACKEND_URL}/translate`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: original, src_lang: srcLang, tgt_lang: tgtLang }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (data.translated_text) {\r\n        setTranslated(data.translated_text);\r\n      } else if (data.error) {\r\n        alert(\"Translate error: \" + data.error);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Translate request failed:\", err);\r\n      alert(\"Translate request failed. Check backend.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const speakText = (text, lang) => {\r\n    if (!(\"speechSynthesis\" in window)) return;\r\n    const u = new SpeechSynthesisUtterance(text);\r\n    const langMap = {\r\n      ur: \"ur-PK\", es: \"es-ES\", fr: \"fr-FR\", de: \"de-DE\", it: \"it-IT\",\r\n      ar: \"ar-SA\", hi: \"hi-IN\", ja: \"ja-JP\", ko: \"ko-KR\", zh: \"zh-CN\",\r\n      ru: \"ru-RU\", en: \"en-US\"\r\n    };\r\n    u.lang = langMap[lang] || \"en-US\";\r\n    window.speechSynthesis.cancel();\r\n    window.speechSynthesis.speak(u);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 720, margin: \"24px auto\", padding: 16, fontFamily: \"Inter, Arial, sans-serif\" }}>\r\n      <h1>Healthcare Translation AI</h1>\r\n\r\n      {/* Language Select */}\r\n      <div style={{ display: \"flex\", gap: 8, marginBottom: 12, flexWrap: \"wrap\" }}>\r\n        <div>\r\n          <label style={{ display: \"block\", fontSize: 12 }}>From</label>\r\n          <select value={srcLang} onChange={(e) => setSrcLang(e.target.value)}>\r\n            {LANG_OPTIONS.map((o) => (\r\n              <option key={o.code} value={o.code}>{o.label}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label style={{ display: \"block\", fontSize: 12 }}>To</label>\r\n          <select value={tgtLang} onChange={(e) => setTgtLang(e.target.value)}>\r\n            {availableTargets.map((code) => {\r\n              const lang = LANG_OPTIONS.find(l => l.code === code);\r\n              return <option key={code} value={code}>{lang?.label || code}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Translation Areas */}\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 12 }}>\r\n        <div style={{ background: \"#fff\", padding: 12, borderRadius: 8 }}>\r\n          <h3>Original ({srcLang})</h3>\r\n          <textarea value={original} onChange={(e) => setOriginal(e.target.value)} style={{ width: \"100%\", minHeight: 160 }} />\r\n          <button onClick={handleTranslate} disabled={loading || !tgtLang} style={{ marginTop: 8, padding: \"8px 12px\" }}>\r\n            {loading ? \"Translating...\" : \"Translate\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ background: \"#fff\", padding: 12, borderRadius: 8 }}>\r\n          <h3>Translated ({tgtLang})</h3>\r\n          <textarea value={translated} readOnly style={{ width: \"100%\", minHeight: 160 }} />\r\n          <button onClick={() => speakText(translated, tgtLang)} disabled={!translated} style={{ marginTop: 8, padding: \"8px 12px\" }}>\r\n            🔊 Speak Translation\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <p style={{ marginTop: 12, color: \"#666\", fontSize: 13 }}>\r\n        Only supported translations are shown in the \"To\" dropdown based on the selected source language.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}