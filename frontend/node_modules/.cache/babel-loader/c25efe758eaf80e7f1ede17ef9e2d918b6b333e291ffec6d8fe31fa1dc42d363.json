{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\genAi\\\\healthcare-translation\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\n\n// Language options with flags\nconst LANG_OPTIONS = [{\n  code: \"en\",\n  label: \"English\",\n  flag: \"🇺🇸\"\n}, {\n  code: \"es\",\n  label: \"Spanish\",\n  flag: \"🇪🇸\"\n}, {\n  code: \"ru\",\n  label: \"Russian\",\n  flag: \"🇷🇺\"\n}, {\n  code: \"zh\",\n  label: \"Chinese\",\n  flag: \"🇨🇳\"\n}, {\n  code: \"fr\",\n  label: \"French\",\n  flag: \"🇫🇷\"\n}, {\n  code: \"de\",\n  label: \"German\",\n  flag: \"🇩🇪\"\n}, {\n  code: \"it\",\n  label: \"Italian\",\n  flag: \"🇮🇹\"\n}, {\n  code: \"ar\",\n  label: \"Arabic\",\n  flag: \"🇸🇦\"\n}, {\n  code: \"hi\",\n  label: \"Hindi\",\n  flag: \"🇮🇳\"\n}, {\n  code: \"ja\",\n  label: \"Japanese\",\n  flag: \"🇯🇵\"\n}, {\n  code: \"ko\",\n  label: \"Korean\",\n  flag: \"🇰🇷\"\n}, {\n  code: \"ur\",\n  label: \"Urdu\",\n  flag: \"🇵🇰\"\n}];\n\n// Map of valid translations (keep your existing logic)\nconst VALID_TARGETS = {\n  en: [\"es\", \"ru\", \"zh\", \"hi\", \"ar\", \"fr\"],\n  es: [\"en\"],\n  ru: [\"en\", \"zh\", \"hi\"],\n  zh: [\"en\", \"ru\", \"es\", \"fr\", \"hi\", \"ar\", \"ja\"],\n  fr: [\"en\", \"zh\", \"hi\"],\n  de: [\"en\", \"ru\", \"hi\"],\n  ar: [\"en\", \"zh\", \"hi\"],\n  hi: [\"en\"],\n  ja: [\"en\", \"es\", \"zh\", \"hi\"]\n};\nexport default function App() {\n  _s();\n  const [original, setOriginal] = useState(\"\");\n  const [translated, setTranslated] = useState(\"\");\n  const [srcLang, setSrcLang] = useState(\"en\");\n  const [tgtLang, setTgtLang] = useState(\"es\");\n  const [loading, setLoading] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Available target languages\n  const availableTargets = VALID_TARGETS[srcLang] || [];\n  if (!availableTargets.includes(tgtLang)) setTgtLang(availableTargets[0] || \"\");\n\n  // Get language info\n  const getSrcLangInfo = () => LANG_OPTIONS.find(l => l.code === srcLang) || {\n    label: srcLang,\n    flag: \"🌐\"\n  };\n  const getTgtLangInfo = () => LANG_OPTIONS.find(l => l.code === tgtLang) || {\n    label: tgtLang,\n    flag: \"🌐\"\n  };\n\n  // Voice-to-text (keep your existing logic)\n  const toggleRecording = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Speech recognition not supported in this browser.\");\n      return;\n    }\n    if (!recognitionRef.current) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = srcLang;\n      recognition.interimResults = true;\n      recognition.continuous = false;\n      recognition.onresult = event => {\n        let transcript = \"\";\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          transcript += event.results[i][0].transcript;\n        }\n        setOriginal(transcript);\n      };\n      recognition.onend = () => setRecording(false);\n      recognitionRef.current = recognition;\n    }\n    if (recording) {\n      recognitionRef.current.stop();\n      setRecording(false);\n    } else {\n      recognitionRef.current.lang = srcLang === \"en\" ? \"en-US\" : srcLang === \"es\" ? \"es-ES\" : srcLang === \"fr\" ? \"fr-FR\" : srcLang === \"ru\" ? \"ru-RU\" : srcLang === \"zh\" ? \"zh-CN\" : srcLang === \"hi\" ? \"hi-IN\" : srcLang === \"ar\" ? \"ar-SA\" : srcLang === \"ja\" ? \"ja-JP\" : srcLang === \"de\" ? \"de-DE\" : \"en-US\";\n      recognitionRef.current.start();\n      setRecording(true);\n    }\n  };\n\n  // Translation (keep your existing logic)\n  const handleTranslate = async () => {\n    if (!original.trim() || !tgtLang) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`${BACKEND_URL}/translate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: original,\n          src_lang: srcLang,\n          tgt_lang: tgtLang\n        })\n      });\n      const data = await res.json();\n      if (data.translated_text) setTranslated(data.translated_text);else if (data.error) alert(\"Translate error: \" + data.error);\n    } catch (err) {\n      console.error(\"Translate request failed:\", err);\n      alert(\"Translate request failed. Check backend.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Text-to-speech (keep your existing logic)\n  const speakText = (text, lang) => {\n    if (!(\"speechSynthesis\" in window)) return;\n    const u = new SpeechSynthesisUtterance(text);\n    const langMap = {\n      ur: \"ur-PK\",\n      es: \"es-ES\",\n      fr: \"fr-FR\",\n      de: \"de-DE\",\n      it: \"it-IT\",\n      ar: \"ar-SA\",\n      hi: \"hi-IN\",\n      ja: \"ja-JP\",\n      ko: \"ko-KR\",\n      zh: \"zh-CN\",\n      ru: \"ru-RU\",\n      en: \"en-US\"\n    };\n    u.lang = langMap[lang] || \"en-US\";\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(u);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Healthcare Translation AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"app-subtitle\",\n        children: \"Professional medical translation powered by AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"translation-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"language-label\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"language-select\",\n            value: srcLang,\n            onChange: e => setSrcLang(e.target.value),\n            children: LANG_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: o.code,\n              children: [o.flag, \" \", o.label]\n            }, o.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"language-label\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"language-select\",\n            value: tgtLang,\n            onChange: e => setTgtLang(e.target.value),\n            children: availableTargets.map(code => {\n              const lang = LANG_OPTIONS.find(l => l.code === code);\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: code,\n                children: [lang === null || lang === void 0 ? void 0 : lang.flag, \" \", (lang === null || lang === void 0 ? void 0 : lang.label) || code]\n              }, code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"translation-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"panel-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"language-flag\",\n                children: getSrcLangInfo().flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), \"Original Text\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea\",\n            value: original,\n            onChange: e => setOriginal(e.target.value),\n            placeholder: \"Enter text to translate or use voice recording...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-record ${recording ? 'recording' : ''}`,\n              onClick: toggleRecording,\n              children: recording ? '⏹️ Stop Recording' : '🎤 Record'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleTranslate,\n              disabled: loading || !tgtLang || !original.trim(),\n              children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this), \"Translating...\"]\n              }, void 0, true) : '🔄 Translate'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"panel-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"language-flag\",\n                children: getTgtLangInfo().flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), \"Translation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea\",\n            value: translated,\n            readOnly: true,\n            placeholder: \"Translation will appear here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => speakText(translated, tgtLang),\n              disabled: !translated,\n              children: \"\\uD83D\\uDD0A Speak Translation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vABB47iob5M4pTdMCdkp1CT3sIQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","LANG_OPTIONS","code","label","flag","VALID_TARGETS","en","es","ru","zh","fr","de","ar","hi","ja","App","_s","original","setOriginal","translated","setTranslated","srcLang","setSrcLang","tgtLang","setTgtLang","loading","setLoading","recording","setRecording","recognitionRef","availableTargets","includes","getSrcLangInfo","find","l","getTgtLangInfo","toggleRecording","window","alert","current","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","continuous","onresult","event","transcript","i","resultIndex","results","length","onend","stop","start","handleTranslate","trim","res","fetch","method","headers","body","JSON","stringify","text","src_lang","tgt_lang","data","json","translated_text","error","err","console","speakText","u","SpeechSynthesisUtterance","langMap","ur","it","ko","speechSynthesis","cancel","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","o","placeholder","onClick","disabled","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/genAi/healthcare-translation/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport './App.css';\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\r\n\r\n// Language options with flags\r\nconst LANG_OPTIONS = [\r\n  { code: \"en\", label: \"English\", flag: \"🇺🇸\" },\r\n  { code: \"es\", label: \"Spanish\", flag: \"🇪🇸\" },\r\n  { code: \"ru\", label: \"Russian\", flag: \"🇷🇺\" },\r\n  { code: \"zh\", label: \"Chinese\", flag: \"🇨🇳\" },\r\n  { code: \"fr\", label: \"French\", flag: \"🇫🇷\" },\r\n  { code: \"de\", label: \"German\", flag: \"🇩🇪\" },\r\n  { code: \"it\", label: \"Italian\", flag: \"🇮🇹\" },\r\n  { code: \"ar\", label: \"Arabic\", flag: \"🇸🇦\" },\r\n  { code: \"hi\", label: \"Hindi\", flag: \"🇮🇳\" },\r\n  { code: \"ja\", label: \"Japanese\", flag: \"🇯🇵\" },\r\n  { code: \"ko\", label: \"Korean\", flag: \"🇰🇷\" },\r\n  { code: \"ur\", label: \"Urdu\", flag: \"🇵🇰\" }\r\n];\r\n\r\n// Map of valid translations (keep your existing logic)\r\nconst VALID_TARGETS = {\r\n  en: [\"es\", \"ru\", \"zh\", \"hi\", \"ar\", \"fr\"],\r\n  es: [\"en\"],\r\n  ru: [\"en\", \"zh\", \"hi\"],\r\n  zh: [\"en\", \"ru\", \"es\", \"fr\", \"hi\", \"ar\", \"ja\"],\r\n  fr: [\"en\", \"zh\", \"hi\"],\r\n  de: [\"en\", \"ru\", \"hi\"],\r\n  ar: [\"en\", \"zh\", \"hi\"],\r\n  hi: [\"en\"],\r\n  ja: [\"en\", \"es\", \"zh\", \"hi\"],\r\n};\r\n\r\nexport default function App() {\r\n  const [original, setOriginal] = useState(\"\");\r\n  const [translated, setTranslated] = useState(\"\");\r\n  const [srcLang, setSrcLang] = useState(\"en\");\r\n  const [tgtLang, setTgtLang] = useState(\"es\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [recording, setRecording] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  // Available target languages\r\n  const availableTargets = VALID_TARGETS[srcLang] || [];\r\n  if (!availableTargets.includes(tgtLang)) setTgtLang(availableTargets[0] || \"\");\r\n\r\n  // Get language info\r\n  const getSrcLangInfo = () => LANG_OPTIONS.find(l => l.code === srcLang) || { label: srcLang, flag: \"🌐\" };\r\n  const getTgtLangInfo = () => LANG_OPTIONS.find(l => l.code === tgtLang) || { label: tgtLang, flag: \"🌐\" };\r\n\r\n  // Voice-to-text (keep your existing logic)\r\n  const toggleRecording = () => {\r\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\r\n      alert(\"Speech recognition not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      const recognition = new SpeechRecognition();\r\n      recognition.lang = srcLang;\r\n      recognition.interimResults = true;\r\n      recognition.continuous = false;\r\n\r\n      recognition.onresult = (event) => {\r\n        let transcript = \"\";\r\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n          transcript += event.results[i][0].transcript;\r\n        }\r\n        setOriginal(transcript);\r\n      };\r\n\r\n      recognition.onend = () => setRecording(false);\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    if (recording) {\r\n      recognitionRef.current.stop();\r\n      setRecording(false);\r\n    } else {\r\n      recognitionRef.current.lang = srcLang === \"en\" ? \"en-US\" :\r\n                                    srcLang === \"es\" ? \"es-ES\" :\r\n                                    srcLang === \"fr\" ? \"fr-FR\" :\r\n                                    srcLang === \"ru\" ? \"ru-RU\" :\r\n                                    srcLang === \"zh\" ? \"zh-CN\" :\r\n                                    srcLang === \"hi\" ? \"hi-IN\" :\r\n                                    srcLang === \"ar\" ? \"ar-SA\" :\r\n                                    srcLang === \"ja\" ? \"ja-JP\" :\r\n                                    srcLang === \"de\" ? \"de-DE\" : \"en-US\";\r\n      recognitionRef.current.start();\r\n      setRecording(true);\r\n    }\r\n  };\r\n\r\n  // Translation (keep your existing logic)\r\n  const handleTranslate = async () => {\r\n    if (!original.trim() || !tgtLang) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(`${BACKEND_URL}/translate`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: original, src_lang: srcLang, tgt_lang: tgtLang }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.translated_text) setTranslated(data.translated_text);\r\n      else if (data.error) alert(\"Translate error: \" + data.error);\r\n    } catch (err) {\r\n      console.error(\"Translate request failed:\", err);\r\n      alert(\"Translate request failed. Check backend.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Text-to-speech (keep your existing logic)\r\n  const speakText = (text, lang) => {\r\n    if (!(\"speechSynthesis\" in window)) return;\r\n    const u = new SpeechSynthesisUtterance(text);\r\n    const langMap = {\r\n      ur: \"ur-PK\", es: \"es-ES\", fr: \"fr-FR\", de: \"de-DE\", it: \"it-IT\",\r\n      ar: \"ar-SA\", hi: \"hi-IN\", ja: \"ja-JP\", ko: \"ko-KR\", zh: \"zh-CN\",\r\n      ru: \"ru-RU\", en: \"en-US\"\r\n    };\r\n    u.lang = langMap[lang] || \"en-US\";\r\n    window.speechSynthesis.cancel();\r\n    window.speechSynthesis.speak(u);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-header\">\r\n        <h1 className=\"app-title\">Healthcare Translation AI</h1>\r\n        <p className=\"app-subtitle\">Professional medical translation powered by AI</p>\r\n      </div>\r\n\r\n      <div className=\"translation-card\">\r\n        {/* Language Selector */}\r\n        <div className=\"language-selector\">\r\n          <div className=\"language-group\">\r\n            <label className=\"language-label\">From</label>\r\n            <select \r\n              className=\"language-select\" \r\n              value={srcLang} \r\n              onChange={(e) => setSrcLang(e.target.value)}\r\n            >\r\n              {LANG_OPTIONS.map((o) => (\r\n                <option key={o.code} value={o.code}>\r\n                  {o.flag} {o.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"language-group\">\r\n            <label className=\"language-label\">To</label>\r\n            <select \r\n              className=\"language-select\" \r\n              value={tgtLang} \r\n              onChange={(e) => setTgtLang(e.target.value)}\r\n            >\r\n              {availableTargets.map((code) => {\r\n                const lang = LANG_OPTIONS.find(l => l.code === code);\r\n                return (\r\n                  <option key={code} value={code}>\r\n                    {lang?.flag} {lang?.label || code}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Translation Areas */}\r\n        <div className=\"translation-grid\">\r\n          <div className=\"text-panel\">\r\n            <div className=\"panel-header\">\r\n              <h3 className=\"panel-title\">\r\n                <span className=\"language-flag\">{getSrcLangInfo().flag}</span>\r\n                Original Text\r\n              </h3>\r\n            </div>\r\n            <textarea \r\n              className=\"textarea\"\r\n              value={original} \r\n              onChange={(e) => setOriginal(e.target.value)}\r\n              placeholder=\"Enter text to translate or use voice recording...\"\r\n            />\r\n            <div className=\"input-controls\">\r\n              <button \r\n                className={`btn btn-record ${recording ? 'recording' : ''}`}\r\n                onClick={toggleRecording}\r\n              >\r\n                {recording ? '⏹️ Stop Recording' : '🎤 Record'}\r\n              </button>\r\n              <button \r\n                className=\"btn btn-primary\" \r\n                onClick={handleTranslate} \r\n                disabled={loading || !tgtLang || !original.trim()}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <div className=\"loading-spinner\"></div>\r\n                    Translating...\r\n                  </>\r\n                ) : (\r\n                  '🔄 Translate'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-panel\">\r\n            <div className=\"panel-header\">\r\n              <h3 className=\"panel-title\">\r\n                <span className=\"language-flag\">{getTgtLangInfo().flag}</span>\r\n                Translation\r\n              </h3>\r\n            </div>\r\n            <textarea \r\n              className=\"textarea\"\r\n              value={translated} \r\n              readOnly \r\n              placeholder=\"Translation will appear here...\"\r\n            />\r\n            <div className=\"input-controls\">\r\n              <button \r\n                className=\"btn btn-secondary\" \r\n                onClick={() => speakText(translated, tgtLang)} \r\n                disabled={!translated}\r\n              >\r\n                🔊 Speak Translation\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}