{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\genAi\\\\healthcare-translation\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\n\n// Language options with flags\nconst LANG_OPTIONS = [{\n  code: \"en\",\n  label: \"English\",\n  flag: \"🇺🇸\"\n}, {\n  code: \"es\",\n  label: \"Spanish\",\n  flag: \"🇪🇸\"\n}, {\n  code: \"ru\",\n  label: \"Russian\",\n  flag: \"🇷🇺\"\n}, {\n  code: \"zh\",\n  label: \"Chinese\",\n  flag: \"🇨🇳\"\n}, {\n  code: \"fr\",\n  label: \"French\",\n  flag: \"🇫🇷\"\n}, {\n  code: \"de\",\n  label: \"German\",\n  flag: \"🇩🇪\"\n}, {\n  code: \"it\",\n  label: \"Italian\",\n  flag: \"🇮🇹\"\n}, {\n  code: \"ar\",\n  label: \"Arabic\",\n  flag: \"🇸🇦\"\n}, {\n  code: \"hi\",\n  label: \"Hindi\",\n  flag: \"🇮🇳\"\n}, {\n  code: \"ja\",\n  label: \"Japanese\",\n  flag: \"🇯🇵\"\n}, {\n  code: \"ko\",\n  label: \"Korean\",\n  flag: \"🇰🇷\"\n}, {\n  code: \"ur\",\n  label: \"Urdu\",\n  flag: \"🇵🇰\"\n}];\n\n// Map of valid translations (keep your existing logic)\nconst VALID_TARGETS = {\n  en: [\"es\", \"ru\", \"zh\", \"hi\", \"ar\", \"fr\"],\n  es: [\"en\"],\n  ru: [\"en\", \"zh\", \"hi\"],\n  zh: [\"en\", \"ru\", \"es\", \"fr\", \"hi\", \"ar\", \"ja\"],\n  fr: [\"en\", \"zh\", \"hi\"],\n  de: [\"en\", \"ru\", \"hi\"],\n  ar: [\"en\", \"zh\", \"hi\"],\n  hi: [\"en\"],\n  ja: [\"en\", \"es\", \"zh\", \"hi\"]\n};\nexport default function App() {\n  _s();\n  const [original, setOriginal] = useState(\"\");\n  const [translated, setTranslated] = useState(\"\");\n  const [srcLang, setSrcLang] = useState(\"en\");\n  const [tgtLang, setTgtLang] = useState(\"es\");\n  const [loading, setLoading] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // Available target languages\n  const availableTargets = VALID_TARGETS[srcLang] || [];\n  if (!availableTargets.includes(tgtLang)) setTgtLang(availableTargets[0] || \"\");\n\n  // Get language info\n  const getSrcLangInfo = () => LANG_OPTIONS.find(l => l.code === srcLang) || {\n    label: srcLang,\n    flag: \"🌐\"\n  };\n  const getTgtLangInfo = () => LANG_OPTIONS.find(l => l.code === tgtLang) || {\n    label: tgtLang,\n    flag: \"🌐\"\n  };\n\n  // Voice-to-text (keep your existing logic)\n  const toggleRecording = () => {\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\n      alert(\"Speech recognition not supported in this browser.\");\n      return;\n    }\n    if (!recognitionRef.current) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = srcLang;\n      recognition.interimResults = true;\n      recognition.continuous = false;\n      recognition.onresult = event => {\n        let transcript = \"\";\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          transcript += event.results[i][0].transcript;\n        }\n        setOriginal(transcript);\n      };\n      recognition.onend = () => setRecording(false);\n      recognitionRef.current = recognition;\n    }\n    if (recording) {\n      recognitionRef.current.stop();\n      setRecording(false);\n    } else {\n      recognitionRef.current.lang = srcLang === \"en\" ? \"en-US\" : srcLang === \"es\" ? \"es-ES\" : srcLang === \"fr\" ? \"fr-FR\" : srcLang === \"ru\" ? \"ru-RU\" : srcLang === \"zh\" ? \"zh-CN\" : srcLang === \"hi\" ? \"hi-IN\" : srcLang === \"ar\" ? \"ar-SA\" : srcLang === \"ja\" ? \"ja-JP\" : srcLang === \"de\" ? \"de-DE\" : \"en-US\";\n      recognitionRef.current.start();\n      setRecording(true);\n    }\n  };\n\n  // Translation (keep your existing logic)\n  const handleTranslate = async () => {\n    if (!original.trim() || !tgtLang) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`${BACKEND_URL}/translate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: original,\n          src_lang: srcLang,\n          tgt_lang: tgtLang\n        })\n      });\n      const data = await res.json();\n      if (data.translated_text) setTranslated(data.translated_text);else if (data.error) alert(\"Translate error: \" + data.error);\n    } catch (err) {\n      console.error(\"Translate request failed:\", err);\n      alert(\"Translate request failed. Check backend.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Text-to-speech (keep your existing logic)\n  const speakText = (text, lang) => {\n    if (!(\"speechSynthesis\" in window)) return;\n    const u = new SpeechSynthesisUtterance(text);\n    const langMap = {\n      ur: \"ur-PK\",\n      es: \"es-ES\",\n      fr: \"fr-FR\",\n      de: \"de-DE\",\n      it: \"it-IT\",\n      ar: \"ar-SA\",\n      hi: \"hi-IN\",\n      ja: \"ja-JP\",\n      ko: \"ko-KR\",\n      zh: \"zh-CN\",\n      ru: \"ru-RU\",\n      en: \"en-US\"\n    };\n    u.lang = langMap[lang] || \"en-US\";\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(u);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medical-cross\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cross-horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cross-vertical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Healthcare Translation AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"app-subtitle\",\n        children: \"Professional medical translation powered by AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trust-indicators\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trust-badge\",\n          children: \"\\uD83D\\uDD12 HIPAA Compliant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trust-badge\",\n          children: \"\\u26A1 Real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trust-badge\",\n          children: \"\\uD83C\\uDFAF Medical Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"translation-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"language-label\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"language-select\",\n              value: srcLang,\n              onChange: e => setSrcLang(e.target.value),\n              children: LANG_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: o.code,\n                children: [o.flag, \" \", o.label]\n              }, o.code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-swap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"swap-btn\",\n            onClick: () => {\n              if (availableTargets.includes(srcLang)) {\n                const temp = srcLang;\n                setSrcLang(tgtLang);\n                setTgtLang(temp);\n              }\n            },\n            children: \"\\u21C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"language-label\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"language-select\",\n              value: tgtLang,\n              onChange: e => setTgtLang(e.target.value),\n              children: availableTargets.map(code => {\n                const lang = LANG_OPTIONS.find(l => l.code === code);\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: code,\n                  children: [lang === null || lang === void 0 ? void 0 : lang.flag, \" \", (lang === null || lang === void 0 ? void 0 : lang.label) || code]\n                }, code, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"translation-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-panel input-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"panel-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"language-flag\",\n                children: getSrcLangInfo().flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), \"Original Text\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"panel-subtitle\",\n                children: [\"(\", getSrcLangInfo().label, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"character-count\",\n              children: [original.length, \"/1000\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textarea-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"textarea\",\n              value: original,\n              onChange: e => setOriginal(e.target.value),\n              placeholder: \"Enter medical text to translate or use voice recording...\",\n              maxLength: 1000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-record ${recording ? \"recording\" : \"\"}`,\n              onClick: toggleRecording,\n              title: \"Voice input\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: recording ? \"⏹️\" : \"🎤\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), recording ? \"Stop Recording\" : \"Voice Input\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), original && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-clear\",\n              onClick: () => setOriginal(\"\"),\n              title: \"Clear text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), \"Clear\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-panel output-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"panel-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"language-flag\",\n                children: getTgtLangInfo().flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), \"Translation\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"panel-subtitle\",\n                children: [\"(\", getTgtLangInfo().label, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), translated && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"translation-status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-indicator success\",\n                children: \"\\u2713 Translated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textarea-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"textarea output-textarea\",\n              value: translated,\n              readOnly: true,\n              placeholder: \"Professional medical translation will appear here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => speakText(translated, tgtLang),\n              disabled: !translated,\n              title: \"Listen to translation\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: \"\\uD83D\\uDD0A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), \"Listen\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), translated && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => navigator.clipboard.writeText(translated),\n              title: \"Copy translation\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-icon\",\n                children: \"\\uD83D\\uDCCB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), \"Copy\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-large\",\n          onClick: handleTranslate,\n          disabled: loading || !tgtLang || !original.trim(),\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), \"Translating...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-icon\",\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), \"Translate Now\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vABB47iob5M4pTdMCdkp1CT3sIQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","LANG_OPTIONS","code","label","flag","VALID_TARGETS","en","es","ru","zh","fr","de","ar","hi","ja","App","original","setOriginal","translated","setTranslated","srcLang","setSrcLang","tgtLang","setTgtLang","loading","setLoading","recording","setRecording","recognitionRef","availableTargets","includes","getSrcLangInfo","find","l","getTgtLangInfo","toggleRecording","window","alert","current","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","continuous","onresult","event","transcript","i","resultIndex","results","length","onend","stop","start","handleTranslate","trim","res","fetch","method","headers","body","JSON","stringify","text","src_lang","tgt_lang","data","json","translated_text","error","err","console","speakText","u","SpeechSynthesisUtterance","langMap","ur","it","ko","speechSynthesis","cancel","speak","className","children","fileName","lineNumber","columnNumber","value","onChange","e","target","map","o","onClick","temp","placeholder","maxLength","title","readOnly","disabled","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/genAi/healthcare-translation/frontend/src/App.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useRef } from \"react\"\r\nimport \"./App.css\"\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\"\r\n\r\n// Language options with flags\r\nconst LANG_OPTIONS = [\r\n  { code: \"en\", label: \"English\", flag: \"🇺🇸\" },\r\n  { code: \"es\", label: \"Spanish\", flag: \"🇪🇸\" },\r\n  { code: \"ru\", label: \"Russian\", flag: \"🇷🇺\" },\r\n  { code: \"zh\", label: \"Chinese\", flag: \"🇨🇳\" },\r\n  { code: \"fr\", label: \"French\", flag: \"🇫🇷\" },\r\n  { code: \"de\", label: \"German\", flag: \"🇩🇪\" },\r\n  { code: \"it\", label: \"Italian\", flag: \"🇮🇹\" },\r\n  { code: \"ar\", label: \"Arabic\", flag: \"🇸🇦\" },\r\n  { code: \"hi\", label: \"Hindi\", flag: \"🇮🇳\" },\r\n  { code: \"ja\", label: \"Japanese\", flag: \"🇯🇵\" },\r\n  { code: \"ko\", label: \"Korean\", flag: \"🇰🇷\" },\r\n  { code: \"ur\", label: \"Urdu\", flag: \"🇵🇰\" },\r\n]\r\n\r\n// Map of valid translations (keep your existing logic)\r\nconst VALID_TARGETS = {\r\n  en: [\"es\", \"ru\", \"zh\", \"hi\", \"ar\", \"fr\"],\r\n  es: [\"en\"],\r\n  ru: [\"en\", \"zh\", \"hi\"],\r\n  zh: [\"en\", \"ru\", \"es\", \"fr\", \"hi\", \"ar\", \"ja\"],\r\n  fr: [\"en\", \"zh\", \"hi\"],\r\n  de: [\"en\", \"ru\", \"hi\"],\r\n  ar: [\"en\", \"zh\", \"hi\"],\r\n  hi: [\"en\"],\r\n  ja: [\"en\", \"es\", \"zh\", \"hi\"],\r\n}\r\n\r\nexport default function App() {\r\n  const [original, setOriginal] = useState(\"\")\r\n  const [translated, setTranslated] = useState(\"\")\r\n  const [srcLang, setSrcLang] = useState(\"en\")\r\n  const [tgtLang, setTgtLang] = useState(\"es\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [recording, setRecording] = useState(false)\r\n  const recognitionRef = useRef(null)\r\n\r\n  // Available target languages\r\n  const availableTargets = VALID_TARGETS[srcLang] || []\r\n  if (!availableTargets.includes(tgtLang)) setTgtLang(availableTargets[0] || \"\")\r\n\r\n  // Get language info\r\n  const getSrcLangInfo = () => LANG_OPTIONS.find((l) => l.code === srcLang) || { label: srcLang, flag: \"🌐\" }\r\n  const getTgtLangInfo = () => LANG_OPTIONS.find((l) => l.code === tgtLang) || { label: tgtLang, flag: \"🌐\" }\r\n\r\n  // Voice-to-text (keep your existing logic)\r\n  const toggleRecording = () => {\r\n    if (!(\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window)) {\r\n      alert(\"Speech recognition not supported in this browser.\")\r\n      return\r\n    }\r\n\r\n    if (!recognitionRef.current) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\n      const recognition = new SpeechRecognition()\r\n      recognition.lang = srcLang\r\n      recognition.interimResults = true\r\n      recognition.continuous = false\r\n\r\n      recognition.onresult = (event) => {\r\n        let transcript = \"\"\r\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n          transcript += event.results[i][0].transcript\r\n        }\r\n        setOriginal(transcript)\r\n      }\r\n\r\n      recognition.onend = () => setRecording(false)\r\n      recognitionRef.current = recognition\r\n    }\r\n\r\n    if (recording) {\r\n      recognitionRef.current.stop()\r\n      setRecording(false)\r\n    } else {\r\n      recognitionRef.current.lang =\r\n        srcLang === \"en\"\r\n          ? \"en-US\"\r\n          : srcLang === \"es\"\r\n            ? \"es-ES\"\r\n            : srcLang === \"fr\"\r\n              ? \"fr-FR\"\r\n              : srcLang === \"ru\"\r\n                ? \"ru-RU\"\r\n                : srcLang === \"zh\"\r\n                  ? \"zh-CN\"\r\n                  : srcLang === \"hi\"\r\n                    ? \"hi-IN\"\r\n                    : srcLang === \"ar\"\r\n                      ? \"ar-SA\"\r\n                      : srcLang === \"ja\"\r\n                        ? \"ja-JP\"\r\n                        : srcLang === \"de\"\r\n                          ? \"de-DE\"\r\n                          : \"en-US\"\r\n      recognitionRef.current.start()\r\n      setRecording(true)\r\n    }\r\n  }\r\n\r\n  // Translation (keep your existing logic)\r\n  const handleTranslate = async () => {\r\n    if (!original.trim() || !tgtLang) return\r\n\r\n    setLoading(true)\r\n    try {\r\n      const res = await fetch(`${BACKEND_URL}/translate`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: original, src_lang: srcLang, tgt_lang: tgtLang }),\r\n      })\r\n      const data = await res.json()\r\n      if (data.translated_text) setTranslated(data.translated_text)\r\n      else if (data.error) alert(\"Translate error: \" + data.error)\r\n    } catch (err) {\r\n      console.error(\"Translate request failed:\", err)\r\n      alert(\"Translate request failed. Check backend.\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Text-to-speech (keep your existing logic)\r\n  const speakText = (text, lang) => {\r\n    if (!(\"speechSynthesis\" in window)) return\r\n    const u = new SpeechSynthesisUtterance(text)\r\n    const langMap = {\r\n      ur: \"ur-PK\",\r\n      es: \"es-ES\",\r\n      fr: \"fr-FR\",\r\n      de: \"de-DE\",\r\n      it: \"it-IT\",\r\n      ar: \"ar-SA\",\r\n      hi: \"hi-IN\",\r\n      ja: \"ja-JP\",\r\n      ko: \"ko-KR\",\r\n      zh: \"zh-CN\",\r\n      ru: \"ru-RU\",\r\n      en: \"en-US\",\r\n    }\r\n    u.lang = langMap[lang] || \"en-US\"\r\n    window.speechSynthesis.cancel()\r\n    window.speechSynthesis.speak(u)\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"app-header\">\r\n        <div className=\"header-icon\">\r\n          <div className=\"medical-cross\">\r\n            <div className=\"cross-horizontal\"></div>\r\n            <div className=\"cross-vertical\"></div>\r\n          </div>\r\n        </div>\r\n        <h1 className=\"app-title\">Healthcare Translation AI</h1>\r\n        <p className=\"app-subtitle\">Professional medical translation powered by AI</p>\r\n        <div className=\"trust-indicators\">\r\n          <span className=\"trust-badge\">🔒 HIPAA Compliant</span>\r\n          <span className=\"trust-badge\">⚡ Real-time</span>\r\n          <span className=\"trust-badge\">🎯 Medical Accuracy</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"translation-card\">\r\n        {/* Language Selector */}\r\n        <div className=\"language-selector\">\r\n          <div className=\"language-group\">\r\n            <label className=\"language-label\">From</label>\r\n            <div className=\"select-wrapper\">\r\n              <select className=\"language-select\" value={srcLang} onChange={(e) => setSrcLang(e.target.value)}>\r\n                {LANG_OPTIONS.map((o) => (\r\n                  <option key={o.code} value={o.code}>\r\n                    {o.flag} {o.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"language-swap\">\r\n            <button\r\n              className=\"swap-btn\"\r\n              onClick={() => {\r\n                if (availableTargets.includes(srcLang)) {\r\n                  const temp = srcLang\r\n                  setSrcLang(tgtLang)\r\n                  setTgtLang(temp)\r\n                }\r\n              }}\r\n            >\r\n              ⇄\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"language-group\">\r\n            <label className=\"language-label\">To</label>\r\n            <div className=\"select-wrapper\">\r\n              <select className=\"language-select\" value={tgtLang} onChange={(e) => setTgtLang(e.target.value)}>\r\n                {availableTargets.map((code) => {\r\n                  const lang = LANG_OPTIONS.find((l) => l.code === code)\r\n                  return (\r\n                    <option key={code} value={code}>\r\n                      {lang?.flag} {lang?.label || code}\r\n                    </option>\r\n                  )\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Translation Areas */}\r\n        <div className=\"translation-grid\">\r\n          <div className=\"text-panel input-panel\">\r\n            <div className=\"panel-header\">\r\n              <h3 className=\"panel-title\">\r\n                <span className=\"language-flag\">{getSrcLangInfo().flag}</span>\r\n                Original Text\r\n                <span className=\"panel-subtitle\">({getSrcLangInfo().label})</span>\r\n              </h3>\r\n              <div className=\"character-count\">{original.length}/1000</div>\r\n            </div>\r\n            <div className=\"textarea-wrapper\">\r\n              <textarea\r\n                className=\"textarea\"\r\n                value={original}\r\n                onChange={(e) => setOriginal(e.target.value)}\r\n                placeholder=\"Enter medical text to translate or use voice recording...\"\r\n                maxLength={1000}\r\n              />\r\n            </div>\r\n            <div className=\"input-controls\">\r\n              <button\r\n                className={`btn btn-record ${recording ? \"recording\" : \"\"}`}\r\n                onClick={toggleRecording}\r\n                title=\"Voice input\"\r\n              >\r\n                <span className=\"btn-icon\">{recording ? \"⏹️\" : \"🎤\"}</span>\r\n                {recording ? \"Stop Recording\" : \"Voice Input\"}\r\n              </button>\r\n              {original && (\r\n                <button className=\"btn btn-clear\" onClick={() => setOriginal(\"\")} title=\"Clear text\">\r\n                  <span className=\"btn-icon\">🗑️</span>\r\n                  Clear\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-panel output-panel\">\r\n            <div className=\"panel-header\">\r\n              <h3 className=\"panel-title\">\r\n                <span className=\"language-flag\">{getTgtLangInfo().flag}</span>\r\n                Translation\r\n                <span className=\"panel-subtitle\">({getTgtLangInfo().label})</span>\r\n              </h3>\r\n              {translated && (\r\n                <div className=\"translation-status\">\r\n                  <span className=\"status-indicator success\">✓ Translated</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"textarea-wrapper\">\r\n              <textarea\r\n                className=\"textarea output-textarea\"\r\n                value={translated}\r\n                readOnly\r\n                placeholder=\"Professional medical translation will appear here...\"\r\n              />\r\n            </div>\r\n            <div className=\"input-controls\">\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => speakText(translated, tgtLang)}\r\n                disabled={!translated}\r\n                title=\"Listen to translation\"\r\n              >\r\n                <span className=\"btn-icon\">🔊</span>\r\n                Listen\r\n              </button>\r\n              {translated && (\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => navigator.clipboard.writeText(translated)}\r\n                  title=\"Copy translation\"\r\n                >\r\n                  <span className=\"btn-icon\">📋</span>\r\n                  Copy\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"action-bar\">\r\n          <button\r\n            className=\"btn btn-primary btn-large\"\r\n            onClick={handleTranslate}\r\n            disabled={loading || !tgtLang || !original.trim()}\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <div className=\"loading-spinner\"></div>\r\n                Translating...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"btn-icon\">🔄</span>\r\n                Translate Now\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}