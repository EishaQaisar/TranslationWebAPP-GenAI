{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\healthcare-translation\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\nconst LANG_OPTIONS = [{\n  code: \"es\",\n  label: \"Spanish\"\n}, {\n  code: \"ur\",\n  label: \"Urdu\"\n}, {\n  code: \"fr\",\n  label: \"French\"\n}, {\n  code: \"de\",\n  label: \"German\"\n}];\nexport default function App() {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [original, setOriginal] = useState(\"\");\n  const [translated, setTranslated] = useState(\"\");\n  const [audioURL, setAudioURL] = useState(\"\");\n  const [tgtLang, setTgtLang] = useState(\"es\");\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      chunksRef.current = [];\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(chunksRef.current, {\n          type: \"audio/wav\"\n        });\n        const formData = new FormData();\n        formData.append(\"file\", audioBlob, \"recording.wav\");\n        formData.append(\"target_lang\", tgtLang);\n        try {\n          const res = await fetch(`${BACKEND_URL}/process-audio`, {\n            method: \"POST\",\n            body: formData\n          });\n          const data = await res.json();\n          if (data.error) {\n            console.error(\"Error:\", data.error);\n          } else {\n            setOriginal(data.original_text);\n            setTranslated(data.translated_text);\n            setAudioURL(BACKEND_URL + data.audio_url);\n          }\n        } catch (err) {\n          console.error(\"Upload failed:\", err);\n        }\n      };\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (err) {\n      console.error(\"Mic access denied:\", err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 720,\n      margin: \"24px auto\",\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Healthcare Translation (Audio)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 8,\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Target Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tgtLang,\n          onChange: e => setTgtLang(e.target.value),\n          children: LANG_OPTIONS.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: o.code,\n            children: o.label\n          }, o.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"\\uD83C\\uDFA4 Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"\\u23F9 Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gap: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#fff\",\n          padding: 12,\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Original\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: original,\n          readOnly: true,\n          style: {\n            width: \"100%\",\n            minHeight: 160\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#fff\",\n          padding: 12,\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Translated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: translated,\n          readOnly: true,\n          style: {\n            width: \"100%\",\n            minHeight: 160\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), audioURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Translated Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gx0XRW2GLrxZfXpwCNhtXMMTeRg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","LANG_OPTIONS","code","label","App","_s","recording","setRecording","original","setOriginal","translated","setTranslated","audioURL","setAudioURL","tgtLang","setTgtLang","mediaRecorderRef","chunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","mediaRecorder","MediaRecorder","ondataavailable","e","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","res","fetch","method","body","json","error","console","original_text","translated_text","audio_url","err","start","stopRecording","stop","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginBottom","value","onChange","target","map","o","onClick","gridTemplateColumns","background","borderRadius","readOnly","width","minHeight","marginTop","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/healthcare-translation/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"http://localhost:8000\";\r\n\r\nconst LANG_OPTIONS = [\r\n  { code: \"es\", label: \"Spanish\" },\r\n  { code: \"ur\", label: \"Urdu\" },\r\n  { code: \"fr\", label: \"French\" },\r\n  { code: \"de\", label: \"German\" }\r\n];\r\n\r\nexport default function App() {\r\n  const [recording, setRecording] = useState(false);\r\n  const [original, setOriginal] = useState(\"\");\r\n  const [translated, setTranslated] = useState(\"\");\r\n  const [audioURL, setAudioURL] = useState(\"\");\r\n  const [tgtLang, setTgtLang] = useState(\"es\");\r\n  const mediaRecorderRef = useRef(null);\r\n  const chunksRef = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      chunksRef.current = [];\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = mediaRecorder;\r\n\r\n      mediaRecorder.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          chunksRef.current.push(e.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(chunksRef.current, { type: \"audio/wav\" });\r\n        const formData = new FormData();\r\n        formData.append(\"file\", audioBlob, \"recording.wav\");\r\n        formData.append(\"target_lang\", tgtLang);\r\n\r\n        try {\r\n          const res = await fetch(`${BACKEND_URL}/process-audio`, {\r\n            method: \"POST\",\r\n            body: formData\r\n          });\r\n          const data = await res.json();\r\n          if (data.error) {\r\n            console.error(\"Error:\", data.error);\r\n          } else {\r\n            setOriginal(data.original_text);\r\n            setTranslated(data.translated_text);\r\n            setAudioURL(BACKEND_URL + data.audio_url);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Upload failed:\", err);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setRecording(true);\r\n    } catch (err) {\r\n      console.error(\"Mic access denied:\", err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 720, margin: \"24px auto\", padding: 16 }}>\r\n      <h1>Healthcare Translation (Audio)</h1>\r\n\r\n      <div style={{ display: \"flex\", gap: 8, marginBottom: 12 }}>\r\n        <div>\r\n          <label>Target Language:</label>\r\n          <select value={tgtLang} onChange={(e) => setTgtLang(e.target.value)}>\r\n            {LANG_OPTIONS.map((o) => (\r\n              <option key={o.code} value={o.code}>\r\n                {o.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {!recording ? (\r\n          <button onClick={startRecording}>🎤 Start Recording</button>\r\n        ) : (\r\n          <button onClick={stopRecording}>⏹ Stop</button>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 12 }}>\r\n        <div style={{ background: \"#fff\", padding: 12, borderRadius: 8 }}>\r\n          <h3>Original</h3>\r\n          <textarea value={original} readOnly style={{ width: \"100%\", minHeight: 160 }} />\r\n        </div>\r\n        <div style={{ background: \"#fff\", padding: 12, borderRadius: 8 }}>\r\n          <h3>Translated</h3>\r\n          <textarea value={translated} readOnly style={{ width: \"100%\", minHeight: 160 }} />\r\n        </div>\r\n      </div>\r\n\r\n      {audioURL && (\r\n        <div style={{ marginTop: 12 }}>\r\n          <h3>Translated Audio</h3>\r\n          <audio controls src={audioURL} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}